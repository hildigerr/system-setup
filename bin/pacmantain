#!/bin/bash

#pkgs_installed_all=$(expac -Q '%n')
state_dir="${XDG_STATE_HOME:-$HOME/.local/state}/pacman"
mkdir -p "${state_dir}"
touch "${state_dir}/verified_optional_only_ok.lst"
touch "${state_dir}/verified_explicit_dependencies.lst"
touch "${state_dir}/verified_explicit_installs.lst"

rcgen() {
  #echo "PS1='\\u@\\h:${1}\\$ ';whitelist(){ echo \"${1}\" >> \"${2}\"; }"
  echo "
    HISTCONTROL=ignoreboth:erasedups
    PS1='\\u@\\h:${1}\\$ '
    whitelist(){ echo \"${1}\" >> \"${2}\"; }
  "
}


echo "Verify packages installed that are only optional:"
whitelist_file="${state_dir}/verified_optional_only_ok.lst"
pkgs_installed_asdeps=$(pacman -Qqd)
pkgs_installed_asdeps_only=$(pacman -Qi ${pkgs_installed_asdeps} | awk '
    /^Name/ {name=$3}
    /^Required By/ {if ($4 == "None") {print name}}
')
pkgs_needing_verification=$(sort \
    <(echo "$pkgs_installed_asdeps_only")\
    "$whitelist_file" | uniq -u)

for each in ${pkgs_needing_verification}; do
    pacman -Qi $each
    rcsub=$(rcgen "$each" "$whitelist_file")
    bash --rcfile <(echo "$rcsub") #<(echo "PS1='\u@\h:${each}\$ '")
done


echo "Verify explicitly installed packages that are dependencies:"
whitelist_file="${state_dir}/verified_explicit_dependencies.lst"
pkgs_installed_explicitly=$(pacman -Qqe)
pkgs_installed_explicit_aredeps=$(pacman -Qi ${pkgs_installed_explicitly} | awk '
    /^Name/ {name=$3}
    /^Required By/ {if ($4 != "None") {print name}}
')
pkgs_needing_verification=$(sort \
    <(echo "$pkgs_installed_explicit_aredeps")\
    "$whitelist_file" | uniq -u)

for each in ${pkgs_needing_verification}; do
    pacman -Qi $each
    rcsub=$(rcgen "$each" "$whitelist_file")
    bash --rcfile <(echo "$rcsub")
done


echo "Searching for orphaned packages:"
pkgs_orphaned=$(pacman -Qdtq)
for each in ${pkgs_orphaned}; do
    pacman -Qi $each
    rcsub=$(rcgen "$each" "/dev/null")
    bash --rcfile <(echo "$rcsub")
done


echo "Verify other installed packages still wanted:"
whitelist_file="${state_dir}/verified_explicit_installs.lst"
pkgs_installed=$(pacman -Qetq)
pkgs_needing_verification=$(sort \
    <(echo "$pkgs_installed")\
    "$whitelist_file" | uniq -u)

for each in ${pkgs_needing_verification}; do
    pacman -Qi $each
    rcsub=$(rcgen "$each" "$whitelist_file")
    bash --rcfile <(echo "$rcsub")
done

